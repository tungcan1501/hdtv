<?php
/**
 * @file
 * Schema, install, update and uninstall hooks for Authcache Personalization.
 */

/**
 * Implements hook_schema().
 */
function authcache_p13n_schema() {
  $schema['cache_authcache_p13n'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_authcache_p13n']['description'] = 'Cache table for authcache p13n.';

  $schema['authcache_p13n_key_value'] = array(
    'description' => 'Generic key-value store for caching things not separated out into their own tables.',
    'fields' => array(
      'name' => array(
        'description' => 'Primary Key: Unique key name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'collection' => array(
        'description' => 'Primary Key: Unique collection name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'value' => array(
        'description' => 'Serialized data.',
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
      ),
    ),
    'primary key' => array('name', 'collection'),
  );

  return $schema;
}

/**
 * Add table for key-value storage.
 */
function authcache_p13n_update_7001() {
  if (!db_table_exists('authcache_p13n_key_value')) {
    $schema['authcache_p13n_key_value'] = array(
      'description' => 'Generic key-value store for caching things not separated out into their own tables.',
      'fields' => array(
        'name' => array(
          'description' => 'Primary Key: Unique key name.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'collection' => array(
          'description' => 'Primary Key: Unique collection name.',
          'type' => 'varchar',
          'length' => 255,
          'not null' => TRUE,
          'default' => '',
        ),
        'value' => array(
          'description' => 'Serialized data.',
          'type' => 'blob',
          'not null' => FALSE,
          'size' => 'big',
        ),
      ),
      'primary key' => array('name', 'collection'),
    );

    db_create_table('authcache_p13n_key_value', $schema['authcache_p13n_key_value']);

    // Make sure that the new AuthcacheP13nKeyValueStoreInterface and
    // AuthcacheP13nDatabaseKeyValueStore are available to the auto-loader.
    registry_rebuild();

    authcache_p13n_request_router_rebuild();
  }

  variable_del('authcache_p13n_default_request_router_routes');
}

/**
 * Remove authcache_p13n_routes variable.
 */
function authcache_p13n_update_7000() {
  variable_del('authcache_p13n_routes');
}
